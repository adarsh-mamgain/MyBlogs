{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","App","props","renderBlogs","state","blogList","map","item","title","content","author","date","a","get","then","result","data","setState","className","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAGAA,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,c,IAE1BC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAcRC,YAAc,WAEZ,OADiB,EAAKC,MAAMC,SACZC,KAAI,SAACC,GAAD,OAClB,gCACE,6BAAKA,EAAKC,QACV,4BAAID,EAAKE,UACT,4BAAIF,EAAKG,SACT,gCAAQH,EAAKI,cApBjB,EAAKP,MAAQ,CACXC,SAAU,IAHK,E,4FAOnB,iCAAAO,EAAA,sEACQf,IACHgB,IADG,+CAEHC,MAAK,SAACC,GACL,IAAMV,EAAWU,EAAOC,KACxB,EAAKC,SAAS,CAAEZ,gBALtB,2C,0EAoBA,WACE,OACE,sBAAMa,UAAU,UAAhB,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,qBAAKA,UAAU,WAAf,SACE,oBAAIA,UAAU,8BAAd,SACGC,KAAKhB,4B,GAnCJiB,aA6CHnB,ICvCAoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.a9547a6a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blogList: [],\n    };\n  }\n\n  async componentDidMount() {\n    await axios\n      .get(`http://localhost:8000/api/blog/?format=json`)\n      .then((result) => {\n        const blogList = result.data;\n        this.setState({ blogList });\n      });\n  }\n  renderBlogs = () => {\n    const newBlogs = this.state.blogList;\n    return newBlogs.map((item) => (\n      <div>\n        <h1>{item.title}</h1>\n        <p>{item.content}</p>\n        <p>{item.author}</p>\n        <small>{item.date}</small>\n      </div>\n    ));\n  };\n\n  render() {\n    return (\n      <main className=\"content\">\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <ul className=\"list-group list-group-flush\">\n                {this.renderBlogs()}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}